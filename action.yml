outputs:
  env_name:
    description: 'Environment name (from build dispatch)'
    value: ${{ steps.bdisp.outputs.env_name }}
  env_key:
    description: 'Environment key (from build dispatch)'
    value: ${{ steps.bdisp.outputs.env_key }}
  image_tag:
    description: 'Image tag (from build dispatch)'
    value: ${{ steps.bdisp.outputs.image_tag }}
  deploy_enabled:
    description: 'Whether deployment is enabled (from build dispatch)'
    value: ${{ steps.bdisp.outputs.deploy_enabled }}
name: 'Uncover Actions'
description: 'Aggregator entrypoint to call sub-actions via a short ref: uncoverthefuture-org/actions@v1'

inputs:
  subaction:
    description: "Sub-action to run (use 'help' or leave empty to list available)"
    required: false
  category:
    description: "Optional category to route: build | podman | infra | app (auto-derived from subaction if omitted)"
    required: false
  params_json:
    description: "JSON blob of parameters to pass to the selected subaction (keeps this file small)"
    required: false


runs:
  using: 'composite'
  steps:
    - name: Help (list available actions)
      run: |
        set -euo pipefail
        SA='${{ inputs.subaction }}'
        if [ -z "${SA}" ] || [ "${SA}" = "help" ]; then
          ROOT="${GITHUB_ACTION_PATH}"
          BASE="${ROOT}/.github/actions"
          echo "\nUncover Actions â€” available subactions:" 
          for CAT in build podman infra app; do
            DIR="${BASE}/${CAT}"
            [ -d "$DIR" ] || continue
            MAP=""
            while IFS= read -r SUB; do
              NAME=$(basename "$SUB")
              [ "$NAME" = "dispatch" ] && continue
              [ -f "$SUB/action.yml" ] || continue
              MAP="${MAP}${MAP:+, }${NAME}"
            done < <(find "$DIR" -mindepth 1 -maxdepth 1 -type d | sort)
            if [ -n "$MAP" ]; then
              echo "- ${CAT}: ${MAP}"
            fi
          done
          echo "\nUsage:"
          echo "- uses: uncoverthefuture-org/actions@v1"
          echo "  with:"
          echo "    subaction: <one-of-the-above>"
          echo "    # optional: category: build|podman|infra|app\n"
          echo "Docs per category:" 
          BASE_URL="${GITHUB_SERVER_URL:-https://github.com}/${GITHUB_REPOSITORY:-uncoverthefuture-org/actions}/tree/${GITHUB_REF_NAME:-main}/.github/actions"
          echo "- build:  ${BASE_URL}/build"
          echo "- podman: ${BASE_URL}/podman"
          echo "- infra:  ${BASE_URL}/infra"
          echo "- app:    ${BASE_URL}/app\n"
          echo "Tip: pass 'subaction: help' to print this list."
          exit 1
        fi
      shell: bash

    - name: Determine category
      id: route
      run: |
        set -euo pipefail
        SA='${{ inputs.subaction }}'
        CAT='${{ inputs.category }}'
        if [ -z "$CAT" ]; then
          case "$SA" in
            build-and-push) CAT='build' ;;
            remote-podman-exec|podman-login-pull|podman-stop-rm-container|podman-run-service|podman-run-db) CAT='podman' ;;
            prepare-ubuntu-host|apache-manage-vhost) CAT='infra' ;;
            ssh-django-api-deploy|write-remote-env-file) CAT='app' ;;
            *) echo "Error: unsupported subaction '$SA'" >&2; exit 1 ;;
          esac
        fi
        case "$CAT" in build|podman|infra|app) :;; *) echo "Error: unsupported category '$CAT'" >&2; exit 1;; esac
        echo "category=$CAT" >> "$GITHUB_OUTPUT"
      shell: bash

    - name: Build dispatch
      id: bdisp
      if: ${{ steps.route.outputs.category == 'build' }}
      uses: ./.github/actions/build/dispatch
      with:
        subaction: ${{ inputs.subaction }}
        params_json: ${{ inputs.params_json }}

    - name: Podman dispatch
      if: ${{ steps.route.outputs.category == 'podman' }}
      uses: ./.github/actions/podman/dispatch
      with:
        subaction: ${{ inputs.subaction }}
        params_json: ${{ inputs.params_json }}

    - name: Infra dispatch
      if: ${{ steps.route.outputs.category == 'infra' }}
      uses: ./.github/actions/infra/dispatch
      with:
        subaction: ${{ inputs.subaction }}
        params_json: ${{ inputs.params_json }}

    - name: App dispatch
      if: ${{ steps.route.outputs.category == 'app' }}
      uses: ./.github/actions/app/dispatch
      with:
        subaction: ${{ inputs.subaction }}
        params_json: ${{ inputs.params_json }}
