name: 'dispatch: app'
description: 'App dispatch: route short calls to app actions'

inputs:
  subaction:
    description: "ssh-django-deploy | ssh-django-api-deploy | ssh-nextjs-deploy | ssh-react-deploy | ssh-laravel-deploy | write-remote-env-file"
    required: true
  params_json:
    description: "JSON blob of parameters to pass to the selected subaction"
    required: false

  # Common SSH / remote
  ssh_host:
    required: false
  ssh_user:
    required: false
  ssh_key:
    required: false
  root_ssh_key:
    required: false
  ssh_port:
    required: false
    default: '22'
  ssh_fingerprint:
    required: false
  podman_user:
    required: false
    default: 'deployer'
  connect_mode:
    required: false
    default: 'auto'

  # Orchestration flags
  prepare_host:
    required: false
    default: 'false'

  # Host prep
  env_dir_path:
    required: false
  install_podman:
    required: false
    default: 'true'
  additional_packages:
    required: false
    default: 'jq curl ca-certificates'
  create_podman_user:
    required: false
    default: 'false'

  # Env
  env_name:
    required: false
  env_file_path:
    required: false
  env_b64:
    required: false
  env_content:
    required: false

  # Registry & image
  registry:
    required: false
    default: 'ghcr.io'
  image_name:
    required: false
  image_tag:
    required: false
  registry_login:
    required: false
    default: 'true'
  registry_username:
    required: false
  registry_token:
    required: false

  # Runtime
  app_slug:
    required: false
  container_name:
    required: false
  host_port:
    required: false
  container_port:
    required: false
  restart_policy:
    required: false
    default: 'unless-stopped'
  migrate:
    required: false
    default: 'true'
  migrate_cmd:
    required: false
    default: 'python manage.py migrate --noinput'
  extra_run_args:
    required: false
  memory_limit:
    required: false
    default: '512m'

  # VHost
  manage_vhost:
    required: false
    default: 'false'
  domain:
    required: false
  base_domain:
    required: false
  domain_prefix_prod:
    required: false
    default: 'api'
  domain_prefix_staging:
    required: false
    default: 'api-staging'
  domain_prefix_dev:
    required: false
    default: 'api-dev'
  vhost_mode:
    required: false
    default: 'mod_wsgi'
  wsgi_script_path:
    required: false
  require_dns_match:
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Normalize params JSON
      id: params
      uses: uncoverthefuture-org/actions/.github/actions/app/common/normalize-params@master
      with:
        params_json: ${{ inputs.params_json }}

    - name: Compute derived defaults
      id: defaults
      uses: uncoverthefuture-org/actions/.github/actions/app/common/compute-defaults@master

    - name: Validate app subaction
      uses: uncoverthefuture-org/actions/.github/actions/common/validate-subaction@master
      with:
        subaction: ${{ inputs.subaction }}
        allowed: ssh-django-deploy|ssh-django-api-deploy|ssh-nextjs-deploy|ssh-react-deploy|ssh-laravel-deploy|write-remote-env-file

    - name: Validate base SSH for app subactions
      if: ${{ inputs.subaction != 'write-remote-env-file' && inputs.subaction != 'ssh-django-api-deploy' && inputs.subaction != 'ssh-django-deploy' && inputs.subaction != 'ssh-nextjs-deploy' && inputs.subaction != 'ssh-react-deploy' && inputs.subaction != 'ssh-laravel-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/common/validate-base-ssh@master
      with:
        subaction: ${{ inputs.subaction }}
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}

    - name: Validate subaction-specific inputs
      if: ${{ inputs.subaction != 'write-remote-env-file' && inputs.subaction != 'ssh-django-api-deploy' && inputs.subaction != 'ssh-django-deploy' && inputs.subaction != 'ssh-nextjs-deploy' && inputs.subaction != 'ssh-react-deploy' && inputs.subaction != 'ssh-laravel-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/common/validate-env-inputs@master
      with:
        subaction: ${{ inputs.subaction }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}

    - name: django validate
      if: ${{ inputs.subaction == 'ssh-django-deploy' || inputs.subaction == 'ssh-django-api-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/django/validate@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        registry: ${{ inputs.registry != '' && inputs.registry || fromJSON(steps.params.outputs.json).registry }}
        registry_login: ${{ inputs.registry_login != '' && inputs.registry_login || fromJSON(steps.params.outputs.json).registry_login }}
        registry_username: ${{ inputs.registry_username != '' && inputs.registry_username || fromJSON(steps.params.outputs.json).registry_username }}
        registry_token: ${{ inputs.registry_token != '' && inputs.registry_token || fromJSON(steps.params.outputs.json).registry_token }}
        write_env_file: ${{ (inputs.env_b64 != '' || inputs.env_content != '') || fromJSON(steps.params.outputs.json).write_env_file }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}
        image_name: ${{ inputs.image_name != '' && inputs.image_name || fromJSON(steps.params.outputs.json).image_name || steps.defaults.outputs.image_name }}

    - name: write-remote-env-file
      if: ${{ inputs.subaction == 'write-remote-env-file' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/write-remote-env-file@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_user: ${{ inputs.ssh_user != '' && inputs.ssh_user || fromJSON(steps.params.outputs.json).ssh_user }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key != '' && inputs.root_ssh_key || fromJSON(steps.params.outputs.json).root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port != '' && inputs.ssh_port || fromJSON(steps.params.outputs.json).ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint != '' && inputs.ssh_fingerprint || fromJSON(steps.params.outputs.json).ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user != '' && inputs.podman_user || fromJSON(steps.params.outputs.json).podman_user }}
        connect_mode: ${{ inputs.connect_mode != '' && inputs.connect_mode || fromJSON(steps.params.outputs.json).connect_mode }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name }}
        env_file_path: ${{ inputs.env_file_path != '' && inputs.env_file_path || fromJSON(steps.params.outputs.json).env_file_path || steps.defaults.outputs.env_file_path }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}

    - name: ssh-django-api-deploy
      if: ${{ inputs.subaction == 'ssh-django-api-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/ssh-django-api-deploy@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_user: ${{ inputs.ssh_user != '' && inputs.ssh_user || fromJSON(steps.params.outputs.json).ssh_user }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key != '' && inputs.root_ssh_key || fromJSON(steps.params.outputs.json).root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port != '' && inputs.ssh_port || fromJSON(steps.params.outputs.json).ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint != '' && inputs.ssh_fingerprint || fromJSON(steps.params.outputs.json).ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user != '' && inputs.podman_user || fromJSON(steps.params.outputs.json).podman_user }}
        connect_mode: ${{ inputs.connect_mode != '' && inputs.connect_mode || fromJSON(steps.params.outputs.json).connect_mode }}
        prepare_host: ${{ inputs.prepare_host != '' && inputs.prepare_host || fromJSON(steps.params.outputs.json).prepare_host }}
        install_podman: ${{ inputs.install_podman != '' && inputs.install_podman || fromJSON(steps.params.outputs.json).install_podman }}
        create_podman_user: ${{ inputs.create_podman_user != '' && inputs.create_podman_user || fromJSON(steps.params.outputs.json).create_podman_user }}
        env_dir_path: ${{ inputs.env_dir_path != '' && inputs.env_dir_path || fromJSON(steps.params.outputs.json).env_dir_path || steps.defaults.outputs.env_dir_path }}
        additional_packages: ${{ inputs.additional_packages != '' && inputs.additional_packages || fromJSON(steps.params.outputs.json).additional_packages }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name }}
        env_file_path: ${{ inputs.env_file_path != '' && inputs.env_file_path || fromJSON(steps.params.outputs.json).env_file_path || steps.defaults.outputs.env_file_path }}
        write_env_file: ${{ (inputs.env_b64 != '' || inputs.env_content != '') || fromJSON(steps.params.outputs.json).write_env_file }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}
        registry: ${{ inputs.registry != '' && inputs.registry || fromJSON(steps.params.outputs.json).registry }}
        registry_username: ${{ inputs.registry_username != '' && inputs.registry_username || fromJSON(steps.params.outputs.json).registry_username }}
        registry_token: ${{ inputs.registry_token != '' && inputs.registry_token || fromJSON(steps.params.outputs.json).registry_token }}
        registry_login: ${{ inputs.registry_login != '' && inputs.registry_login || fromJSON(steps.params.outputs.json).registry_login }}
        image_name: ${{ inputs.image_name != '' && inputs.image_name || fromJSON(steps.params.outputs.json).image_name || steps.defaults.outputs.image_name }}
        image_tag: ${{ inputs.image_tag != '' && inputs.image_tag || fromJSON(steps.params.outputs.json).image_tag }}
        app_slug: ${{ inputs.app_slug != '' && inputs.app_slug || fromJSON(steps.params.outputs.json).app_slug || steps.defaults.outputs.app_slug }}
        container_name: ${{ inputs.container_name != '' && inputs.container_name || fromJSON(steps.params.outputs.json).container_name }}
        host_port: ${{ inputs.host_port != '' && inputs.host_port || fromJSON(steps.params.outputs.json).host_port }}
        container_port: ${{ inputs.container_port != '' && inputs.container_port || fromJSON(steps.params.outputs.json).container_port }}
        restart_policy: ${{ inputs.restart_policy != '' && inputs.restart_policy || fromJSON(steps.params.outputs.json).restart_policy }}
        migrate: ${{ inputs.migrate != '' && inputs.migrate || fromJSON(steps.params.outputs.json).migrate }}
        migrate_cmd: ${{ inputs.migrate_cmd != '' && inputs.migrate_cmd || fromJSON(steps.params.outputs.json).migrate_cmd }}
        extra_run_args: ${{ inputs.extra_run_args != '' && inputs.extra_run_args || fromJSON(steps.params.outputs.json).extra_run_args }}
        memory_limit: ${{ inputs.memory_limit != '' && inputs.memory_limit || fromJSON(steps.params.outputs.json).memory_limit }}
        manage_vhost: ${{ inputs.manage_vhost != '' && inputs.manage_vhost || fromJSON(steps.params.outputs.json).manage_vhost }}
        domain: ${{ inputs.domain != '' && inputs.domain || fromJSON(steps.params.outputs.json).domain }}
        base_domain: ${{ inputs.base_domain != '' && inputs.base_domain || fromJSON(steps.params.outputs.json).base_domain }}
        domain_prefix_prod: ${{ inputs.domain_prefix_prod != '' && inputs.domain_prefix_prod || fromJSON(steps.params.outputs.json).domain_prefix_prod }}
        domain_prefix_staging: ${{ inputs.domain_prefix_staging != '' && inputs.domain_prefix_staging || fromJSON(steps.params.outputs.json).domain_prefix_staging }}
        domain_prefix_dev: ${{ inputs.domain_prefix_dev != '' && inputs.domain_prefix_dev || fromJSON(steps.params.outputs.json).domain_prefix_dev }}
        vhost_mode: ${{ inputs.vhost_mode != '' && inputs.vhost_mode || fromJSON(steps.params.outputs.json).vhost_mode }}
        wsgi_script_path: ${{ inputs.wsgi_script_path != '' && inputs.wsgi_script_path || fromJSON(steps.params.outputs.json).wsgi_script_path }}
        require_dns_match: ${{ inputs.require_dns_match != '' && inputs.require_dns_match || fromJSON(steps.params.outputs.json).require_dns_match }}

    - name: ssh-django-deploy
      if: ${{ inputs.subaction == 'ssh-django-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/ssh-django-deploy@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_user: ${{ inputs.ssh_user != '' && inputs.ssh_user || fromJSON(steps.params.outputs.json).ssh_user }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key != '' && inputs.root_ssh_key || fromJSON(steps.params.outputs.json).root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port != '' && inputs.ssh_port || fromJSON(steps.params.outputs.json).ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint != '' && inputs.ssh_fingerprint || fromJSON(steps.params.outputs.json).ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user != '' && inputs.podman_user || fromJSON(steps.params.outputs.json).podman_user }}
        connect_mode: ${{ inputs.connect_mode != '' && inputs.connect_mode || fromJSON(steps.params.outputs.json).connect_mode }}
        prepare_host: ${{ inputs.prepare_host != '' && inputs.prepare_host || fromJSON(steps.params.outputs.json).prepare_host }}
        install_podman: ${{ inputs.install_podman != '' && inputs.install_podman || fromJSON(steps.params.outputs.json).install_podman }}
        create_podman_user: ${{ inputs.create_podman_user != '' && inputs.create_podman_user || fromJSON(steps.params.outputs.json).create_podman_user }}
        env_dir_path: ${{ inputs.env_dir_path != '' && inputs.env_dir_path || fromJSON(steps.params.outputs.json).env_dir_path || steps.defaults.outputs.env_dir_path }}
        additional_packages: ${{ inputs.additional_packages != '' && inputs.additional_packages || fromJSON(steps.params.outputs.json).additional_packages }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name }}
        env_file_path: ${{ inputs.env_file_path != '' && inputs.env_file_path || fromJSON(steps.params.outputs.json).env_file_path || steps.defaults.outputs.env_file_path }}
        write_env_file: ${{ (inputs.env_b64 != '' || inputs.env_content != '') || fromJSON(steps.params.outputs.json).write_env_file }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}
        registry: ${{ inputs.registry != '' && inputs.registry || fromJSON(steps.params.outputs.json).registry }}
        registry_username: ${{ inputs.registry_username != '' && inputs.registry_username || fromJSON(steps.params.outputs.json).registry_username }}
        registry_token: ${{ inputs.registry_token != '' && inputs.registry_token || fromJSON(steps.params.outputs.json).registry_token }}
        registry_login: ${{ inputs.registry_login != '' && inputs.registry_login || fromJSON(steps.params.outputs.json).registry_login }}
        image_name: ${{ inputs.image_name != '' && inputs.image_name || fromJSON(steps.params.outputs.json).image_name || steps.defaults.outputs.image_name }}
        image_tag: ${{ inputs.image_tag != '' && inputs.image_tag || fromJSON(steps.params.outputs.json).image_tag }}
        app_slug: ${{ inputs.app_slug != '' && inputs.app_slug || fromJSON(steps.params.outputs.json).app_slug || steps.defaults.outputs.app_slug }}
        container_name: ${{ inputs.container_name != '' && inputs.container_name || fromJSON(steps.params.outputs.json).container_name }}
        host_port: ${{ inputs.host_port != '' && inputs.host_port || fromJSON(steps.params.outputs.json).host_port }}
        container_port: ${{ inputs.container_port != '' && inputs.container_port || fromJSON(steps.params.outputs.json).container_port }}
        restart_policy: ${{ inputs.restart_policy != '' && inputs.restart_policy || fromJSON(steps.params.outputs.json).restart_policy }}
        migrate: ${{ inputs.migrate != '' && inputs.migrate || fromJSON(steps.params.outputs.json).migrate }}
        migrate_cmd: ${{ inputs.migrate_cmd != '' && inputs.migrate_cmd || fromJSON(steps.params.outputs.json).migrate_cmd }}
        extra_run_args: ${{ inputs.extra_run_args != '' && inputs.extra_run_args || fromJSON(steps.params.outputs.json).extra_run_args }}
        memory_limit: ${{ inputs.memory_limit != '' && inputs.memory_limit || fromJSON(steps.params.outputs.json).memory_limit }}
        manage_vhost: ${{ inputs.manage_vhost != '' && inputs.manage_vhost || fromJSON(steps.params.outputs.json).manage_vhost }}
        domain: ${{ inputs.domain != '' && inputs.domain || fromJSON(steps.params.outputs.json).domain }}
        base_domain: ${{ inputs.base_domain != '' && inputs.base_domain || fromJSON(steps.params.outputs.json).base_domain }}
        domain_prefix_prod: ${{ inputs.domain_prefix_prod != '' && inputs.domain_prefix_prod || fromJSON(steps.params.outputs.json).domain_prefix_prod }}
        domain_prefix_staging: ${{ inputs.domain_prefix_staging != '' && inputs.domain_prefix_staging || fromJSON(steps.params.outputs.json).domain_prefix_staging }}
        domain_prefix_dev: ${{ inputs.domain_prefix_dev != '' && inputs.domain_prefix_dev || fromJSON(steps.params.outputs.json).domain_prefix_dev }}
        vhost_mode: ${{ inputs.vhost_mode != '' && inputs.vhost_mode || fromJSON(steps.params.outputs.json).vhost_mode }}
        wsgi_script_path: ${{ inputs.wsgi_script_path != '' && inputs.wsgi_script_path || fromJSON(steps.params.outputs.json).wsgi_script_path }}
        require_dns_match: ${{ inputs.require_dns_match != '' && inputs.require_dns_match || fromJSON(steps.params.outputs.json).require_dns_match }}

    - name: ssh-nextjs-deploy
      if: ${{ inputs.subaction == 'ssh-nextjs-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/ssh-nextjs-deploy@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_user: ${{ inputs.ssh_user != '' && inputs.ssh_user || fromJSON(steps.params.outputs.json).ssh_user }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key != '' && inputs.root_ssh_key || fromJSON(steps.params.outputs.json).root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port != '' && inputs.ssh_port || fromJSON(steps.params.outputs.json).ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint != '' && inputs.ssh_fingerprint || fromJSON(steps.params.outputs.json).ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user != '' && inputs.podman_user || fromJSON(steps.params.outputs.json).podman_user }}
        connect_mode: ${{ inputs.connect_mode != '' && inputs.connect_mode || fromJSON(steps.params.outputs.json).connect_mode }}
        prepare_host: ${{ inputs.prepare_host != '' && inputs.prepare_host || fromJSON(steps.params.outputs.json).prepare_host }}
        install_podman: ${{ inputs.install_podman != '' && inputs.install_podman || fromJSON(steps.params.outputs.json).install_podman }}
        create_podman_user: ${{ inputs.create_podman_user != '' && inputs.create_podman_user || fromJSON(steps.params.outputs.json).create_podman_user }}
        env_dir_path: ${{ inputs.env_dir_path != '' && inputs.env_dir_path || fromJSON(steps.params.outputs.json).env_dir_path || steps.defaults.outputs.env_dir_path }}
        additional_packages: ${{ inputs.additional_packages != '' && inputs.additional_packages || fromJSON(steps.params.outputs.json).additional_packages }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name }}
        env_file_path: ${{ inputs.env_file_path != '' && inputs.env_file_path || fromJSON(steps.params.outputs.json).env_file_path || steps.defaults.outputs.env_file_path }}
        write_env_file: ${{ (inputs.env_b64 != '' || inputs.env_content != '') || fromJSON(steps.params.outputs.json).write_env_file }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}
        registry: ${{ inputs.registry != '' && inputs.registry || fromJSON(steps.params.outputs.json).registry }}
        registry_username: ${{ inputs.registry_username != '' && inputs.registry_username || fromJSON(steps.params.outputs.json).registry_username }}
        registry_token: ${{ inputs.registry_token != '' && inputs.registry_token || fromJSON(steps.params.outputs.json).registry_token }}
        registry_login: ${{ inputs.registry_login != '' && inputs.registry_login || fromJSON(steps.params.outputs.json).registry_login }}
        image_name: ${{ inputs.image_name != '' && inputs.image_name || fromJSON(steps.params.outputs.json).image_name || steps.defaults.outputs.image_name }}
        image_tag: ${{ inputs.image_tag != '' && inputs.image_tag || fromJSON(steps.params.outputs.json).image_tag }}
        app_slug: ${{ inputs.app_slug != '' && inputs.app_slug || fromJSON(steps.params.outputs.json).app_slug || steps.defaults.outputs.app_slug }}
        container_name: ${{ inputs.container_name != '' && inputs.container_name || fromJSON(steps.params.outputs.json).container_name }}
        host_port: ${{ inputs.host_port != '' && inputs.host_port || fromJSON(steps.params.outputs.json).host_port }}
        container_port: ${{ inputs.container_port != '' && inputs.container_port || fromJSON(steps.params.outputs.json).container_port }}
        restart_policy: ${{ inputs.restart_policy != '' && inputs.restart_policy || fromJSON(steps.params.outputs.json).restart_policy }}
        extra_run_args: ${{ inputs.extra_run_args != '' && inputs.extra_run_args || fromJSON(steps.params.outputs.json).extra_run_args }}
        memory_limit: ${{ inputs.memory_limit != '' && inputs.memory_limit || fromJSON(steps.params.outputs.json).memory_limit }}
        manage_vhost: ${{ inputs.manage_vhost != '' && inputs.manage_vhost || fromJSON(steps.params.outputs.json).manage_vhost }}
        domain: ${{ inputs.domain != '' && inputs.domain || fromJSON(steps.params.outputs.json).domain }}
        base_domain: ${{ inputs.base_domain != '' && inputs.base_domain || fromJSON(steps.params.outputs.json).base_domain }}
        domain_prefix_prod: ${{ inputs.domain_prefix_prod != '' && inputs.domain_prefix_prod || fromJSON(steps.params.outputs.json).domain_prefix_prod }}
        domain_prefix_staging: ${{ inputs.domain_prefix_staging != '' && inputs.domain_prefix_staging || fromJSON(steps.params.outputs.json).domain_prefix_staging }}
        domain_prefix_dev: ${{ inputs.domain_prefix_dev != '' && inputs.domain_prefix_dev || fromJSON(steps.params.outputs.json).domain_prefix_dev }}
        vhost_mode: ${{ inputs.vhost_mode != '' && inputs.vhost_mode || fromJSON(steps.params.outputs.json).vhost_mode }}
       
    - name: ssh-react-deploy
      if: ${{ inputs.subaction == 'ssh-react-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/ssh-react-deploy@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_user: ${{ inputs.ssh_user != '' && inputs.ssh_user || fromJSON(steps.params.outputs.json).ssh_user }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key != '' && inputs.root_ssh_key || fromJSON(steps.params.outputs.json).root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port != '' && inputs.ssh_port || fromJSON(steps.params.outputs.json).ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint != '' && inputs.ssh_fingerprint || fromJSON(steps.params.outputs.json).ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user != '' && inputs.podman_user || fromJSON(steps.params.outputs.json).podman_user }}
        connect_mode: ${{ inputs.connect_mode != '' && inputs.connect_mode || fromJSON(steps.params.outputs.json).connect_mode }}
        prepare_host: ${{ inputs.prepare_host != '' && inputs.prepare_host || fromJSON(steps.params.outputs.json).prepare_host }}
        install_podman: ${{ inputs.install_podman != '' && inputs.install_podman || fromJSON(steps.params.outputs.json).install_podman }}
        create_podman_user: ${{ inputs.create_podman_user != '' && inputs.create_podman_user || fromJSON(steps.params.outputs.json).create_podman_user }}
        env_dir_path: ${{ inputs.env_dir_path != '' && inputs.env_dir_path || fromJSON(steps.params.outputs.json).env_dir_path || steps.defaults.outputs.env_dir_path }}
        additional_packages: ${{ inputs.additional_packages != '' && inputs.additional_packages || fromJSON(steps.params.outputs.json).additional_packages }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name }}
        env_file_path: ${{ inputs.env_file_path != '' && inputs.env_file_path || fromJSON(steps.params.outputs.json).env_file_path || steps.defaults.outputs.env_file_path }}
        write_env_file: ${{ (inputs.env_b64 != '' || inputs.env_content != '') || fromJSON(steps.params.outputs.json).write_env_file }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}
        registry: ${{ inputs.registry != '' && inputs.registry || fromJSON(steps.params.outputs.json).registry }}
        registry_username: ${{ inputs.registry_username != '' && inputs.registry_username || fromJSON(steps.params.outputs.json).registry_username }}
        registry_token: ${{ inputs.registry_token != '' && inputs.registry_token || fromJSON(steps.params.outputs.json).registry_token }}
        registry_login: ${{ inputs.registry_login != '' && inputs.registry_login || fromJSON(steps.params.outputs.json).registry_login }}
        image_name: ${{ inputs.image_name != '' && inputs.image_name || fromJSON(steps.params.outputs.json).image_name || steps.defaults.outputs.image_name }}
        image_tag: ${{ inputs.image_tag != '' && inputs.image_tag || fromJSON(steps.params.outputs.json).image_tag }}
        app_slug: ${{ inputs.app_slug != '' && inputs.app_slug || fromJSON(steps.params.outputs.json).app_slug || steps.defaults.outputs.app_slug }}
        container_name: ${{ inputs.container_name != '' && inputs.container_name || fromJSON(steps.params.outputs.json).container_name }}
        host_port: ${{ inputs.host_port != '' && inputs.host_port || fromJSON(steps.params.outputs.json).host_port }}
        container_port: ${{ inputs.container_port != '' && inputs.container_port || fromJSON(steps.params.outputs.json).container_port }}
        restart_policy: ${{ inputs.restart_policy != '' && inputs.restart_policy || fromJSON(steps.params.outputs.json).restart_policy }}
        extra_run_args: ${{ inputs.extra_run_args != '' && inputs.extra_run_args || fromJSON(steps.params.outputs.json).extra_run_args }}
        memory_limit: ${{ inputs.memory_limit != '' && inputs.memory_limit || fromJSON(steps.params.outputs.json).memory_limit }}
        manage_vhost: ${{ inputs.manage_vhost != '' && inputs.manage_vhost || fromJSON(steps.params.outputs.json).manage_vhost }}
        domain: ${{ inputs.domain != '' && inputs.domain || fromJSON(steps.params.outputs.json).domain }}
        base_domain: ${{ inputs.base_domain != '' && inputs.base_domain || fromJSON(steps.params.outputs.json).base_domain }}
        domain_prefix_prod: ${{ inputs.domain_prefix_prod != '' && inputs.domain_prefix_prod || fromJSON(steps.params.outputs.json).domain_prefix_prod }}
        domain_prefix_staging: ${{ inputs.domain_prefix_staging != '' && inputs.domain_prefix_staging || fromJSON(steps.params.outputs.json).domain_prefix_staging }}
        domain_prefix_dev: ${{ inputs.domain_prefix_dev != '' && inputs.domain_prefix_dev || fromJSON(steps.params.outputs.json).domain_prefix_dev }}
        vhost_mode: ${{ inputs.vhost_mode != '' && inputs.vhost_mode || fromJSON(steps.params.outputs.json).vhost_mode }}

    - name: ssh-laravel-deploy
      if: ${{ inputs.subaction == 'ssh-laravel-deploy' }}
      uses: uncoverthefuture-org/actions/.github/actions/app/ssh-laravel-deploy@master
      with:
        ssh_host: ${{ inputs.ssh_host != '' && inputs.ssh_host || fromJSON(steps.params.outputs.json).ssh_host }}
        ssh_user: ${{ inputs.ssh_user != '' && inputs.ssh_user || fromJSON(steps.params.outputs.json).ssh_user }}
        ssh_key: ${{ inputs.ssh_key != '' && inputs.ssh_key || fromJSON(steps.params.outputs.json).ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key != '' && inputs.root_ssh_key || fromJSON(steps.params.outputs.json).root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port != '' && inputs.ssh_port || fromJSON(steps.params.outputs.json).ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint != '' && inputs.ssh_fingerprint || fromJSON(steps.params.outputs.json).ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user != '' && inputs.podman_user || fromJSON(steps.params.outputs.json).podman_user }}
        connect_mode: ${{ inputs.connect_mode != '' && inputs.connect_mode || fromJSON(steps.params.outputs.json).connect_mode }}
        prepare_host: ${{ inputs.prepare_host != '' && inputs.prepare_host || fromJSON(steps.params.outputs.json).prepare_host }}
        install_podman: ${{ inputs.install_podman != '' && inputs.install_podman || fromJSON(steps.params.outputs.json).install_podman }}
        create_podman_user: ${{ inputs.create_podman_user != '' && inputs.create_podman_user || fromJSON(steps.params.outputs.json).create_podman_user }}
        env_dir_path: ${{ inputs.env_dir_path != '' && inputs.env_dir_path || fromJSON(steps.params.outputs.json).env_dir_path || steps.defaults.outputs.env_dir_path }}
        additional_packages: ${{ inputs.additional_packages != '' && inputs.additional_packages || fromJSON(steps.params.outputs.json).additional_packages }}
        env_name: ${{ inputs.env_name != '' && inputs.env_name || fromJSON(steps.params.outputs.json).env_name || steps.defaults.outputs.env_name }}
        env_file_path: ${{ inputs.env_file_path != '' && inputs.env_file_path || fromJSON(steps.params.outputs.json).env_file_path || steps.defaults.outputs.env_file_path }}
        write_env_file: ${{ (inputs.env_b64 != '' || inputs.env_content != '') || fromJSON(steps.params.outputs.json).write_env_file }}
        env_b64: ${{ inputs.env_b64 != '' && inputs.env_b64 || fromJSON(steps.params.outputs.json).env_b64 }}
        env_content: ${{ inputs.env_content != '' && inputs.env_content || fromJSON(steps.params.outputs.json).env_content }}
        registry: ${{ inputs.registry != '' && inputs.registry || fromJSON(steps.params.outputs.json).registry }}
        registry_username: ${{ inputs.registry_username != '' && inputs.registry_username || fromJSON(steps.params.outputs.json).registry_username }}
        registry_token: ${{ inputs.registry_token != '' && inputs.registry_token || fromJSON(steps.params.outputs.json).registry_token }}
        registry_login: ${{ inputs.registry_login != '' && inputs.registry_login || fromJSON(steps.params.outputs.json).registry_login }}
        image_name: ${{ inputs.image_name != '' && inputs.image_name || fromJSON(steps.params.outputs.json).image_name || steps.defaults.outputs.image_name }}
        image_tag: ${{ inputs.image_tag != '' && inputs.image_tag || fromJSON(steps.params.outputs.json).image_tag || steps.defaults.outputs.image_tag }}
        app_slug: ${{ inputs.app_slug != '' && inputs.app_slug || fromJSON(steps.params.outputs.json).app_slug || steps.defaults.outputs.app_slug }}
        container_name: ${{ inputs.container_name != '' && inputs.container_name || fromJSON(steps.params.outputs.json).container_name }}
        host_port: ${{ inputs.host_port != '' && inputs.host_port || fromJSON(steps.params.outputs.json).host_port }}
        container_port: ${{ inputs.container_port != '' && inputs.container_port || fromJSON(steps.params.outputs.json).container_port }}
        restart_policy: ${{ inputs.restart_policy != '' && inputs.restart_policy || fromJSON(steps.params.outputs.json).restart_policy }}
        migrate: ${{ inputs.migrate != '' && inputs.migrate || fromJSON(steps.params.outputs.json).migrate }}
        migrate_cmd: ${{ inputs.migrate_cmd != '' && inputs.migrate_cmd || fromJSON(steps.params.outputs.json).migrate_cmd }}
        extra_run_args: ${{ inputs.extra_run_args != '' && inputs.extra_run_args || fromJSON(steps.params.outputs.json).extra_run_args }}
        memory_limit: ${{ inputs.memory_limit != '' && inputs.memory_limit || fromJSON(steps.params.outputs.json).memory_limit || steps.defaults.outputs.memory_limit }}
        manage_vhost: ${{ inputs.manage_vhost != '' && inputs.manage_vhost || fromJSON(steps.params.outputs.json).manage_vhost }}
        domain: ${{ inputs.domain != '' && inputs.domain || fromJSON(steps.params.outputs.json).domain }}
        base_domain: ${{ inputs.base_domain != '' && inputs.base_domain || fromJSON(steps.params.outputs.json).base_domain }}
        domain_prefix_prod: ${{ inputs.domain_prefix_prod != '' && inputs.domain_prefix_prod || fromJSON(steps.params.outputs.json).domain_prefix_prod || steps.defaults.outputs.domain_prefix_prod }}
        domain_prefix_staging: ${{ inputs.domain_prefix_staging != '' && inputs.domain_prefix_staging || fromJSON(steps.params.outputs.json).domain_prefix_staging || steps.defaults.outputs.domain_prefix_staging }}
        domain_prefix_dev: ${{ inputs.domain_prefix_dev != '' && inputs.domain_prefix_dev || fromJSON(steps.params.outputs.json).domain_prefix_dev || steps.defaults.outputs.domain_prefix_dev }}
        vhost_mode: ${{ inputs.vhost_mode != '' && inputs.vhost_mode || fromJSON(steps.params.outputs.json).vhost_mode || steps.defaults.outputs.vhost_mode }}
