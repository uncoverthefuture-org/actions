name: 'Prepare Ubuntu Host'
description: 'Bootstraps a fresh Ubuntu server for containerized deployments (Podman, directories, optional user).'

inputs:
  ssh_host:
    description: 'SSH host'
    required: true
  ssh_user:
    description: 'SSH username (non-root)'
    required: true
  ssh_key:
    description: 'SSH private key for non-root user'
    required: true
  root_ssh_key:
    description: 'SSH private key for root (optional)'
    required: false
  ssh_port:
    description: 'SSH port'
    required: false
    default: '22'
  ssh_fingerprint:
    description: 'Server SSH host key fingerprint to verify host identity (optional but recommended)'
    required: false
  connect_mode:
    description: "How to connect: 'auto' (default), 'root', or 'user'. For package install, root is recommended."
    required: false
    default: 'root'
  podman_user:
    description: 'User on remote host that will run containers (rootless)'
    required: false
    default: 'deployer'
  create_podman_user:
    description: 'Create podman_user if it does not exist'
    required: false
    default: 'false'
  env_dir_path:
    description: 'Directory to hold env files and app data'
    required: false
  install_podman:
    description: 'Install Podman and dependencies'
    required: false
    default: 'true'
  additional_packages:
    description: 'Space-separated additional apt packages to install'
    required: false
    default: 'jq curl ca-certificates'

  # Optional platform services
  install_apache:
    description: 'Install and configure Apache2 with common modules'
    required: false
    default: 'false'
  install_webmin:
    description: 'Install Webmin (default false)'
    required: false
    default: 'false'
  install_usermin:
    description: 'Install Usermin (default false)'
    required: false
    default: 'false'
  configure_ufw:
    description: 'Configure UFW firewall (default true)'
    required: false
    default: 'true'
  ufw_allow_ports:
    description: 'Space-separated list of TCP ports to allow (applied if configure_ufw=true)'
    required: false
    default: '22 80 443 10000 20000'
  install_traefik:
    description: 'Install and run Traefik as reverse proxy with SSL'
    required: false
    default: 'true'
  traefik_email:
    description: 'Email for Let''s Encrypt certificates (required if install_traefik=true)'
    required: false
    default: ''

runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      run: |
        if [ -z "${{ inputs.ssh_host }}" ]; then echo 'Error: ssh_host is required' ; exit 1 ; fi
        if [ -z "${{ inputs.ssh_user }}" ]; then echo 'Error: ssh_user is required' ; exit 1 ; fi
        if [ -z "${{ inputs.ssh_key }}" ]; then echo 'Error: ssh_key is required' ; exit 1 ; fi
        case "${{ inputs.connect_mode }}" in auto|root|user) :;; *) echo 'Error: connect_mode must be auto|root|user' ; exit 1 ;;
        esac
        if [ "${{ inputs.install_traefik }}" = "true" ] && [ -z "${{ inputs.traefik_email }}" ]; then
          echo 'Error: traefik_email is required when install_traefik=true'
          exit 1
        fi
      shell: bash

    - name: Compute repo defaults
      id: defaults
      uses: ./.github/actions/app/common/compute-defaults

    - name: Install Podman
      if: ${{ inputs.install_podman == 'true' }}
      uses: ./.github/actions/infra/install-podman
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}
        additional_packages: ${{ inputs.additional_packages }}

    - name: Install Apache
      if: ${{ inputs.install_apache == 'true' }}
      uses: ./.github/actions/infra/install-apache
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}

    - name: Install Webmin/Usermin
      if: ${{ inputs.install_webmin == 'true' || inputs.install_usermin == 'true' }}
      uses: ./.github/actions/infra/install-webmin
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}
        install_webmin: ${{ inputs.install_webmin }}
        install_usermin: ${{ inputs.install_usermin }}

    - name: Configure UFW
      if: ${{ inputs.configure_ufw == 'true' }}
      uses: ./.github/actions/infra/configure-ufw
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}
        ufw_allow_ports: ${{ inputs.ufw_allow_ports }}

    - name: Setup Podman User
      uses: ./.github/actions/infra/setup-podman-user
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}
        create_podman_user: ${{ inputs.create_podman_user }}
        env_dir_path: ${{ inputs.env_dir_path != '' && inputs.env_dir_path || steps.defaults.outputs.env_dir_path }}

    - name: Setup Traefik reverse proxy
      if: ${{ inputs.install_traefik == 'true' }}
      uses: ./.github/actions/infra/setup-traefik
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}
        traefik_email: ${{ inputs.traefik_email }}
