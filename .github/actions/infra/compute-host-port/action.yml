name: 'infra: compute-host-port'
description: 'Compute the host port to proxy to, either from explicit input or env file'

inputs:
  ssh_host:
    description: 'SSH host'
    required: true
  ssh_user:
    description: 'SSH username (non-root)'
    required: true
  ssh_key:
    description: 'SSH private key for non-root user'
    required: true
  root_ssh_key:
    description: 'SSH private key for root (optional)'
    required: false
  ssh_port:
    description: 'SSH port'
    required: false
    default: '22'
  ssh_fingerprint:
    description: 'Server SSH host key fingerprint'
    required: false
  podman_user:
    description: 'User on remote host'
    required: false
    default: 'deployer'
  connect_mode:
    description: "How to connect: 'auto' (default), 'root', or 'user'"
    required: false
    default: 'auto'
  env_name:
    description: 'Environment name'
    required: false
  env_file_path:
    description: 'Base path to the environment file'
    required: false
  source_env:
    description: 'Source env file to derive HOST_PORT'
    required: false
    default: 'true'
  host_port:
    description: 'Explicit host port to use'
    required: false

outputs:
  host_port:
    description: 'The computed host port'
    value: ${{ steps.compute.outputs.host_port }}

runs:
  using: 'composite'
  steps:
    - name: Compute host port
      id: compute
      uses: uncoverthefuture-org/actions/.github/actions/podman/remote-podman-exec@v1.0.31
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        podman_user: ${{ inputs.podman_user }}
        connect_mode: ${{ inputs.connect_mode }}
        env_name: ${{ inputs.env_name }}
        env_file_path: ${{ inputs.env_file_path }}
        source_env: ${{ inputs.source_env }}
        fail_if_env_missing: 'false'
        inline_script: |
          set -euo pipefail
          HP_IN='${{ inputs.host_port }}'
          if [ -n "$HP_IN" ]; then
            HOST_PORT="$HP_IN"
          else
            HOST_PORT="${API_HOST_PORT:-${PORT:-8000}}"
          fi
          echo "host_port=$HOST_PORT" >> "$GITHUB_OUTPUT"
