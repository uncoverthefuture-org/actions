name: 'infra: install-certbot'
description: 'Install Certbot and dependencies on the remote host'

inputs:
  ssh_host:
    description: 'SSH host'
    required: true
  ssh_user:
    description: 'SSH username (non-root)'
    required: true
  ssh_key:
    description: 'SSH private key for non-root user'
    required: true
  root_ssh_key:
    description: 'SSH private key for root (optional)'
    required: false
  ssh_port:
    description: 'SSH port'
    required: false
    default: '22'
  ssh_fingerprint:
    description: 'Server SSH host key fingerprint'
    required: false
  connect_mode:
    description: "How to connect: 'auto' (default), 'root', or 'user'"
    required: false
    default: 'auto'
  skip_upload:
    description: 'Skip staging/upload (assumes scripts deployed via deploy-server-scripts)'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    # Stage: Copy script from action path to workspace
    - name: Stage install-certbot script
      if: ${{ inputs.skip_upload != 'true' }}
      shell: bash
      env:
        ACTION_PATH: ${{ github.action_path }}
        WORKSPACE: ${{ github.workspace }}
      run: |
        set -euo pipefail
        mkdir -p "$WORKSPACE/.uactions_cache"
        cp "$ACTION_PATH/../../scripts/infra/install-certbot.sh" "$WORKSPACE/.uactions_cache/install-certbot.sh"

    # Upload: Transfer script to remote /tmp via scp
    - name: Upload install-certbot script
      if: ${{ inputs.skip_upload != 'true' }}
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ inputs.ssh_host }}
        username: ${{ inputs.ssh_user }}
        key: ${{ inputs.ssh_key }}
        port: ${{ inputs.ssh_port }}
        source: ".uactions_cache/install-certbot.sh"
        target: "/tmp"
        overwrite: true

    # Execute: Move to /opt/uactions/scripts/, chmod, run
    - name: Execute install-certbot
      uses: ./.github/actions/podman/remote-podman-exec
      with:
        ssh_host: ${{ inputs.ssh_host }}
        ssh_user: ${{ inputs.ssh_user }}
        ssh_key: ${{ inputs.ssh_key }}
        root_ssh_key: ${{ inputs.root_ssh_key }}
        ssh_port: ${{ inputs.ssh_port }}
        ssh_fingerprint: ${{ inputs.ssh_fingerprint }}
        connect_mode: ${{ inputs.connect_mode }}
        source_env: 'false'
        fail_if_env_missing: 'false'
        inline_script: |
          set -euo pipefail
          # Move script from /tmp to /opt/uactions/scripts/
          sudo mkdir -p /opt/uactions/scripts/infra
          if [ -f /tmp/install-certbot.sh ]; then
            sudo mv -f /tmp/install-certbot.sh /opt/uactions/scripts/infra/install-certbot.sh
          fi
          sudo chmod +x /opt/uactions/scripts/infra/install-certbot.sh
          
          # Execute server-managed script
          /opt/uactions/scripts/infra/install-certbot.sh
