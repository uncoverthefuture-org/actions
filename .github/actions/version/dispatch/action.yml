name: 'dispatch: version'
description: 'Version dispatch: route short calls to version actions'

inputs:
  subaction:
    description: "compute-next | update-tags | update-refs"
    required: true
  params_json:
    description: "JSON blob of parameters to pass to the selected subaction"
    required: false

outputs:
  new:
    description: 'New semantic version tag returned by compute-next.'
    value: ${{ steps.compute.outputs.new }}
  major:
    description: 'Major alias (vX) returned by compute-next.'
    value: ${{ steps.compute.outputs.major }}
  minor:
    description: 'Minor alias (vX.Y) returned by compute-next.'
    value: ${{ steps.compute.outputs.minor }}
  last:
    description: 'Previous full tag (vX.Y.Z) returned by compute-next.'
    value: ${{ steps.compute.outputs.last }}

runs:
  using: 'composite'
  steps:
    - name: Normalize params JSON
      id: pjson
      uses: ./.github/actions/common/normalize-params
      with:
        params_json: ${{ inputs.params_json }}

    - name: Validate subaction
      uses: ./.github/actions/common/validate-subaction
      with:
        subaction: ${{ inputs.subaction }}
        allowed: compute-next|update-tags|update-refs

    - name: compute-next
      if: ${{ inputs.subaction == 'compute-next' }}
      id: compute
      uses: ./.github/actions/version/compute-next
      with:
        level: ${{ fromJSON(steps.pjson.outputs.json).level }}

    - name: update-tags
      if: ${{ inputs.subaction == 'update-tags' }}
      uses: ./.github/actions/version/update-tags
      with:
        new: ${{ fromJSON(steps.pjson.outputs.json).new }}
        major: ${{ fromJSON(steps.pjson.outputs.json).major }}
        minor: ${{ fromJSON(steps.pjson.outputs.json).minor }}
        tag_message: ${{ fromJSON(steps.pjson.outputs.json).tag_message }}

    - name: update-refs
      if: ${{ inputs.subaction == 'update-refs' }}
      uses: ./.github/actions/version/update-refs
      with:
        new_tag: ${{ fromJSON(steps.pjson.outputs.json).new_tag }}
