name: 'Build and Push Docker Image'
description: 'Builds and pushes a Docker image for a Django API, determining environment context.'

inputs:
  registry:
    description: 'Docker registry to use'
    required: false
    default: 'ghcr.io'
  image_name:
    description: 'Name of the Docker image'
    required: false
  github_token:
    description: 'GitHub token for authentication'
    required: false
  environment_script:
    description: 'Path to the script that sets environment context'
    required: false
    default: '.github/scripts/set-environment-context.sh'
  env_name:
    description: 'Override environment name (bypass auto detection if provided)'
    required: false
  env_key:
    description: 'Override environment key (e.g., prod, staging, dev)'
    required: false
  deploy_enabled:
    description: "Override deploy flag ('true' or 'false')"
    required: false
  image_tag:
    description: 'Override image tag to publish'
    required: false

outputs:
  env_name:
    description: 'Environment name'
    value: ${{ steps.environment.outputs.env_name }}
  env_key:
    description: 'Environment key'
    value: ${{ steps.environment.outputs.env_key }}
  image_tag:
    description: 'Image tag'
    value: ${{ steps.environment.outputs.image_tag }}
  deploy_enabled:
    description: 'Whether deployment is enabled'
    value: ${{ steps.environment.outputs.deploy_enabled }}

runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      run: |
        : # no strict validation; defaults are applied below
      shell: bash
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Determine environment context
      id: environment
      uses: ./.github/actions/common/determine-env-context
      with:
        env_name: ${{ inputs.env_name }}
        env_key: ${{ inputs.env_key }}
        deploy_enabled: ${{ inputs.deploy_enabled }}
        image_tag: ${{ inputs.image_tag }}
        environment_script: ${{ inputs.environment_script }}

    - name: Ensure runner has disk space
      uses: ./.github/actions/common/cleanup-runner
      with:
        min_free_gb: '5'

    - name: Log in to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ github.actor }}
        password: ${{ inputs.github_token != '' && inputs.github_token || github.token }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image_name != '' && inputs.image_name || github.repository }}
        tags: |
          type=raw,value=${{ steps.environment.outputs.image_tag }}

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
